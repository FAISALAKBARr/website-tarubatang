// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  role       Role      @default(USER)
  createdAt  DateTime  @default(now())

  // Relasi
  review     Review[]
  umkm       UMKM[]
  feedback   Feedback[]
}

model UMKM {
  id         Int       @id @default(autoincrement())
  nama       String
  harga      Int
  kategori   String
  deskripsi  String?
  kontak     String
  gambarUrl  String
  ownerId    Int
  createdAt  DateTime  @default(now())

  // Relasi
  owner      User      @relation(fields: [ownerId], references: [id])
}

model Wisata {
  id         Int       @id @default(autoincrement())
  nama       String
  deskripsi  String
  harga      Int
  fasilitas  String
  lokasi     String     // Bisa URL Google Maps
  gambarUrl  String
  createdAt  DateTime   @default(now())

  // Relasi
  review     Review[]
}

model Review {
  id         Int       @id @default(autoincrement())
  rating     Int       // 1â€“5
  komentar   String
  userId     Int
  wisataId   Int
  createdAt  DateTime  @default(now())

  // Relasi
  user       User      @relation(fields: [userId], references: [id])
  wisata     Wisata    @relation(fields: [wisataId], references: [id])
}

model Event {
  id         Int       @id @default(autoincrement())
  nama       String
  deskripsi  String
  tanggal    DateTime
  status     String     // TERJADWAL, SELESAI, DITUNDA, dll
  lokasi     String
  gambarUrl  String
  createdAt  DateTime   @default(now())
}

model Feedback {
  id         Int       @id @default(autoincrement())
  nama       String
  email      String
  pesan      String
  userId     Int?
  createdAt  DateTime   @default(now())

  // Relasi (opsional, bisa anonymous)
  user       User?      @relation(fields: [userId], references: [id])
}